# -*- coding: utf-8 -*-
"""Pythonic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13VErm4GgNdL4jcWzVAmvnWhkTDnwLt5T
"""

# Pertukaran nilai
a = 10
b = 20
print (f'sebelum pertukaran')
print (f'f = a = {a}, b={b}')

# c = a
# a = b
# b = c

#Pythonic
a, b = b, a

print ('Setelah pertukaran')
print (f' a = {a}, b = {b}')

# Perbandingan berantai/ Chained Comparison
a = 25
print ((a >= 20) and (a <= 30))
#Pythonic
print (20 <= a <= 30)

# Packing list
'''
a = 10
b = 20
c = 30
d = [None]*3

d[0] = a
d[1] = b
d[2] = c

print (f' a = {a}, b ={b}, c = {c}')
print (f'd = {d}')
'''

#Pythonic
a, b, c = 10, 20, 30
d = {a,b,c} # Ko mau jadiist tambahh [], {}
print (d)

# Melakukan unpacking sekumpulan nilai
#Pythonic
listku = [10,20,30]
a, b, c = listku
print(f'listku = {listku}')
print (f' a = {a}, b={b}, c={c}')

#Pythonic
for item in listku:
  print (f'{item}')# Tidak perlu melakukan iterasi listku[i]

#Fungsi enumerate
nim = ['001','002', '003']
nama = ['bejo','karti', 'tejo']

# for i in range(len(nim)):
#   print (f'{nim[i], {nama[i]}')

#Pythonic
for i, data_nim in enumerate(nim):
  print(f'{data_nim}, {nama[i]}')

#Fungsi zip
# Pythonic tanpa indeks
for nima, namaa in zip (nim, nama):
  print (f'{nima}--{namaa}')

#Fungsi map
def kuadrat (x):
  return x*2

listku = [10,20,30]
listmu = []

# for item in listku:
#   listmu.append(kuadrat(item))

# print (
#     f'listku: {listku}'
#     f'listmu: {listmu}'
# )

#Pythonic
listmu = list(map(lambda x : x*2, listku))
print (listmu)

#Pythonic
# listku =[]
# for i in range (1,100,5):
#   listku.append(i)
# print (listku)

listku = [i for i in range (1, 100, 5)]

# List comprehensihion with conditional
# listme = []
# for item in listku:
#   if item > 50:
#     listme.append(item)

# listme = [x for x in listku if x > 50]


listme = ['A' if x > 50 else 'B' if 30 <= x <= 50 else 'C' for x in listku]
print(listme)

# Pythonic
# List Comprehensions dan fungsi zip
mylist = [[x, y] for x, y in zip(nama, nim)]
print(f'mylist: {mylist}')

listku[::-1]

akku = 'Aku,suka,liat,debat,capres'
print (akku.split(','))

akku = ['apple banana cherry']
kalimat = '@'.join(akku)

print(kalimat)

#Fungsi berantai (Chained Function Call)
#Pyhtonic
def tambah (a,b):
  return a+b
def kali (a,b):
  return a*b

x, y = 10, 20
kondisi = False
hasil = (tambah if kondisi else kali)(x,y)

#Pyhtonic
# Pengganti switch case dengan dictionary
# Kalau valuesnya function coba pakai () after memanggilnya
def one():
  print ('One - Satu')

def two ():
  print (' Two - Dua')

def three ():
  print ('Three - Tiga')

case = 'tiga'
switch = {
    'satu':one,
    'dua': two,
    'tiga': three
}

switch[case]()

a = [10,20,30]
b = [40,50,30]
c = a + b
print (c)

# Pyhtonic
# Ternary Expressions

a = 10
b = 'negatif' if a < 0 else 'Awkowowk' if a == 10  else 'Iyah'
print (b)

# Pyhtonic
# Mengenal opreator in
cari = 90
if cari in listku:
  print ('Ditemukan')
else:
  print ('tidak ditemukan')

#Pyhtonic

def fungsiku():
    nim = '007'
    nama = 'asep'
    ipk = 1.25
    return nim, nama, ipk


a,b,c = fungsiku()
print(a,b,c)

#Pyhtonic

nim = [1, 2, 3]
nama = ['karti', 'karto', 'kirti']
ipk = [1.1, 2.4, 3.4]

siswa = list(zip(nim, nama, ipk))

print(siswa)

#Pyhtonic fungsi unzip
nim, nama, ipk = zip(*siswa)

#Pyhtonic
#Mengenal format teks
# %s buat string, %d buat integer

nama = 'bejo'
usia = 25
#print ('nama saya %s usia saya %d tahun' %(nama, usia))
# Pakai ini saja tidak perlu mengetahui jenis data
print ('nama saya {} usia saya {} tahun'.format(nama, usia)) # Perhatikan urutannya

# Kasus dictionary
siswa = {
    'nim' : '001',
    'nama' : 'budi',
    'usia' : '19',
   'ipk' : '4.00'
}

print ('nama saya {nama} umur saya {usia} tahun'.format(**siswa))

data1 = {'nim': '001', 'bodi'}
data2= {'ipk': 3.25, 'semester': 4}
siswa = {**data1, **data2}
print (f'siswa : {siswa}')

#Pyhtonic
# Tidak menggunakan or
nama = 'miwa'
if nama in ('bejo','teoji','mika'):
  print ('Siswa teladan')
else:
  print ('Siswa reguler')

kecepatan = [50, 90, 30, 45, 60, 80, 120, 150]
ambang_batas = 60
#laju_normal = True

# for laju in kecepatan:
#   if laju > ambang_batas:
#     laju_normal = False
#     print ('Kecepatan melampaui ambang batas')
#     break
# if laju_normal:
#   print ('Laju kendaraan normal')

#Mengenal else pada For loop
#Pyhtonic

for laju in kecepatan:
  if laju > ambang_batas:
    print ('Kecepatan melampaui ambang batas')
    break
else:
  print ('Laju kendaraan normal')

string = 'Kota banjarnegara'
# str_output = ""
# translasi = {
#     'a' : '4',
#     'b': '2',
#     'e' : '3',
#     'o' : '0'

# }

# for x in string:
#   val = translasi.get(x)
#   str_output += val if val else x

# print (f'Hasil konversi: {str_output}')

# Pythonic
# Pakai translations table

sumber = 'aiueo'
tujuan = '41630'

tabel_translasi = str.maketrans(sumber, tujuan)
output = string.translate(tabel_translasi)

print(output)

# Pyhtonic

siswa = ['idi supartdi', 'aku kurniawan', 'makso abawa']
terurut = sorted(siswa, key=lambda x: x.split()[-1])
print (terurut)

listku = [10,20]
dictku = {'satu': 100, 'dua': 200}


def jumlahkan (satu, dua):
  return satu+dua
hasil_list = jumlahkan(*listku) # Perhatikan tanda bintangnya
hasil_dict = jumlahkan(**dictku)

print (hasil_list)
print (hasil_dict)

x = ' aku suka Mkann cmi'
y = x.strip().lower().capitalize().replace(' ','@')

print (y)

def salam (nama, pesan=''): # Kasih nilai di pesan agar menjadi opsional untuk pesan disi atau tidak
  print (f' Hai {nama}! {pesan}')

salam('karti', 'selamat pagi')
salam ('Odi')